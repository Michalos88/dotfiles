# create a new directory and enter it
function cdmkdir () { mkdir -p "$@" && cd "$@" }

# move file/directory to the trash
function trash () {
  local trash_dir="${HOME}/.Trash"
  local temp_ifs=$IFS
  IFS=$'\n'
  for item in "$@"
  do
    if [[ -e "$item" ]]
    then
      item_name="$(basename $item)"
      if [[ -e "${trash_dir}/${item_name}" ]]
      then
        mv -f "$item" "${trash_dir}/${item_name} $(date "+%H-%M-%S")"
      else
        mv -f "$item" "${trash_dir}/"
      fi
    fi
  done
  IFS=$temp_ifs
}

# git functions
function get_git_branch () {
  echo `git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/\1/'`
}

# shortcuts for python
function py () {
  if [ $# -eq 1 ]
    then
      python3 "$1"
    else
      python3
  fi
}
function jnb () {jupyter notebook}
function pyrepo () {
  cdmkdir "$1"
  git init
  gi python > .gitignore
  virtualenv venv
  echo "source ./venv/bin/activate" > .env
  source .env
  git add .
  git commit -m "Repo Init"
}

#shortcut to open documentation with dash
function dash() { open dash://"$1" }

# shortcut for code directory
function c () { cd ~/projects/$1 }
function _c () { _files -W ~/projects -/ }
compdef _c c

# compress video files
compressMp4 () {
  for f; do
    ffmpeg -y -i "$f" -vcodec h264 -preset ultrafast -pix_fmt yuv420p -movflags faststart "${f%.*}-compressed.mp4"
  done
}
